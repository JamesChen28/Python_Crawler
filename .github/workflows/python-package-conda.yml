name: Execute Python Package using Conda

on: 
# push 到 schedule 分支時會觸發
  push:
    branches:
    - schedule
  # 排程每天 UTC 16:30 (台灣時間 0:30) 時觸發
  # 語法可上 crontab.guru 查詢
  schedule:
  - cron: 30 16 * * *

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - name: Test echo syntax
      run: echo "? The job was automatically triggered by a ${{ github.event_name }} event."
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        # python -m pip install --upgrade pip
        # python -m pip install pandas
        # python -m pip install bs4
        # python -m pip install requests
        # python -m pip install pytest
        # python -m pip install flake8
        pip install -r .github/workflows/requirements.txt
    #- name: Lint with flake8
    #  run: |
    #    conda install flake8
    #    # stop the build if there are Python syntax errors or undefined names
    #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: List files in the repository
      run: |
          ls ${{ github.workspace }}
    - run: echo "? This job's status is ${{ job.status }}."
    - name: Execute pttCrawler_Steam_LimitedFree.py
      run: python pttCrawler_Steam_LimitedFree.py
    - name: Commit files
      id: commit
      run: |
        git config --local user.email "james5520042000@gmail.com"
        git config --local user.name "JamesChen28"
        git add --all
        if [-z "$(git status --porcelain)"]; then
           echo "::set-output name=push::false"
        else
           git commit -m "Add changes" -a
           echo "::set-output name=push::true"
        fi
      shell: bash
    - name: Push changes
      if: steps.commit.outputs.push == 'true'
      uses: ad-m/github-push-action@schedule
      with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
